services:
  elasticsearch:
    build:
      context: ./elasticsearch
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - elk
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  logstash:
    build:
      context: ./logstash
    container_name: logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch
    ports:
      - "5000:5000"
    networks:
      - elk

  kibana:
    build:
      context: ./kibana
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elk

  # elastalert:
  #   image: jertel/elastalert2:latest
  #   container_name: elastalert
  #   volumes:
  #     - ./elastalert/config.yaml:/opt/elastalert/config.yaml
  #     - ./elastalert/rules:/opt/elastalert/rules
  #     - ./elastalert/smtp_auth.yaml:/opt/elastalert/smtp_auth.yaml
  #   depends_on:
  #     - elasticsearch
  #   environment:
  #     - ELASTALERT_CONFIG=/opt/elastalert/config.yaml
  #   networks:
  # - elk

  springlog:
    build:
      context: ./spring-log-app
    container_name: springlog
    depends_on:
      - logstash
    networks:
      - elk

volumes:
  esdata:

networks:
  elk:
